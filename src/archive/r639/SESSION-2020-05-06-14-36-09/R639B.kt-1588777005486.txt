fun main() {
    val (n, m) = readLine()!!.split(" ").map { it.toInt() }
    val a = Array(n) { readLine()!!.toCharArray() }
    println(solveMagnet(n, m, a))
}

fun solveMagnet(n: Int, m: Int, a: Array<CharArray>): Int {
    for (i in 0 until n) if (!good(a[i])) return -1
    for (j in 0 until m) if (!good(CharArray(n) { i -> a[i][j] })) return -1
    var c = 0
    val qi = IntArray(n * m)
    val qj = IntArray(n * m)
    var qh = 0
    var qt = 0
    for (i in 0 until n) for (j in 0 until m) {
        if (a[i][j] == '#') {
            
        }
    }
    return c
}


fun good(chars: CharArray): Boolean {
    val i = chars.indexOfFirst { it == '#' }
    if (i < 0) return true
    val j = chars.indexOfLast { it == '#' }
    return chars.slice(i..j).all { it == '#' }
}
